"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6064],{16434:function(e,n,r){r.d(n,{Z:function(){return v}});var t=r(92809),o=r(67294),a=r(2212),i=r(67117),c=r(77976),s=r(26270),l=r(85893);function f(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?f(Object(r),!0).forEach((function(n){(0,t.Z)(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function v(e){var n=e.seed,r=e.type,t=e.options,f=e.material,v=e.selected,d=e.isCaptureGem,p=void 0!==d&&d,m=(0,o.useMemo)((function(){return n>=0?Math.floor(n):a.MathUtils.randInt(0,Number.MAX_SAFE_INTEGER)}),[n]),h=(0,o.useMemo)((function(){return t?new c.ZP(t,v):new c.ZP(u(u({},(0,i.b)(m)),{},{material:f}),v)}),[m,t,f,v]),g=(0,o.useState)(),b=g[0],O=g[1];return(0,o.useEffect)((function(){h.load(null!==r&&void 0!==r?r:c.UR.TAPERED).then((function(e){e.traverse((function(e){e.position.setScalar(0)})),O(e)})).catch((function(e){throw e}))}),[h,r]),(0,s.xQ)((function(){return h.mesh?h.mesh.rotation.y+=p?0:v?.05:.005:null})),b?(0,l.jsx)("primitive",{object:b}):(0,l.jsxs)("mesh",{children:[(0,l.jsx)("boxGeometry",{}),(0,l.jsx)("meshBasicMaterial",{visible:!1})]})}},360:function(e,n,r){r.d(n,{Z:function(){return g}});var t=r(92809),o=r(67294),a=r(68216),i=r(2212),c=r(30232),s=r(19685);function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function f(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){(0,t.Z)(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}var u=function e(n,r){(0,a.Z)(this,e),(0,t.Z)(this,"geometry",void 0),(0,t.Z)(this,"uniforms",void 0),(0,t.Z)(this,"mesh",void 0),(0,t.Z)(this,"material",void 0),this.geometry=new i.IcosahedronGeometry(1,128);var o={};for(var l in n)o[l]={value:n[l]};this.uniforms=o,this.material=new c.s({baseMaterial:c.v.PHYSICAL,vShader:{header:(0,s.kq)("\n        uniform float seed;\n        uniform float edgeWear;\n        uniform float bumpStrength;\n        uniform float faces;\n        uniform float edgeStrength;\n        uniform vec3 scale;\n        uniform vec3 scaleMultiplier;\n        uniform vec2 offset;\n\n        varying vec3 vPos;\n        varying vec3 vMask;\n        varying vec2 vUv;\n\n    \n        vec3 hash( vec3 x ) {\n            x = vec3( dot(x,vec3(127.1,311.7, 74.7)),\n                  dot(x,vec3(269.5,183.3,246.1)),\n                dot(x,vec3(113.5,271.9,124.6)));\n            return fract(sin(x)*43758.5453123);\n        }\n\n        vec3 voronoi( in vec3 x ) {\n            vec3 p = floor( x );\n            vec3 f = fract( x );\n            float id = 0.0;\n            vec2 res = vec2( 100.0 );\n            for( int k=-1; k<=1; k++ )\n            for( int j=-1; j<=1; j++ )\n            for( int i=-1; i<=1; i++ )\n            {\n                vec3 b = vec3( float(i), float(j), float(k) );\n                vec3 r = vec3( b ) - f + hash( p + b );\n                float d = dot( r, r );\n                if( d < res.x )\n                {\n                    id = dot( p+b, vec3(1.0,57.0,113.0 ) );\n                    res = vec2( d, res.x );\n                }\n                else if( d < res.y )\n                {\n                    res.y = d;\n                }\n            }\n            return vec3( sqrt( res ), abs(id) );\n        }\n        \n        gln_tFBMOpts opts =\n          gln_tFBMOpts(1.0, 0.5, 2.0, 1., 1.0, 5, false, false);\n\n        vec3 displace(vec3 p) {\n            vec4 mvPosition = modelMatrix * vec4(p, 1.0);\n            vec3 _p = p;\n            _p.x *= scale.x;\n            _p.y *= scale.y;\n            _p.z *= scale.z;\n            _p.xy += vec2(offset.x, offset.y);\n\n            float cells = pow(voronoi(_p * faces).x * edgeStrength, 3.);\n            float fbm =  gln_pfbm(_p * 2.0, opts) * (0.05 * bumpStrength);\n            float chips =  gln_pfbm(_p * 4.0, opts) * (4. * edgeWear);\n            float a = pow(cells, 4.) * 5.;\n            a *= chips;\n      \n            float height = cells - (a * 4.);\n            height += fbm;\n            \n            vMask = vec3(cells);\n            return (p * (scale + scaleMultiplier)) + (height * normal);\n        }\n        "),main:"\n        vPos = position;\n        vUv = uv;\n        csm_Position = displace(position);\n        "},fShader:{header:(0,s.kq)("\n        uniform vec3 color;\n        uniform float roughnessVariation;\n        uniform float uroughness;\n        uniform float edgeBrightness;\n        uniform float shadowStrength;\n\n        varying vec3 vPos;\n        varying vec3 vMask;\n        varying vec2 vUv;\n\n        gln_tFBMOpts opts = gln_tFBMOpts(1.0, 0.5, 2.0, 2.0, 1.0, 5, false, false);\n        "),main:"\n        float fbm = pow(gln_normalize(gln_sfbm(vPos, opts)), 2.0) * roughnessVariation;\n        float grad = pow(vUv.y, (shadowStrength));\n        vec3 c1 = color * grad;\n        vec3 c2 = c1 * 8. * edgeBrightness;\n        float f = pow(vMask.x, 1.9) * 20.0;\n        float mask = f;\n        vec3 c = mix(c1, c2, mask);\n        csm_Roughness = fbm * uroughness;\n        csm_DiffuseColor = vec4(vec3(c), 1.);\n        "},uniforms:o,passthrough:f({flatShading:!0,color:r?n.color.multiplyScalar(3):n.color},n.material)}),this.mesh=new i.Mesh(this.geometry,this.material)},v=r(67117),d=r(26270),p=r(85893);function m(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function h(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?m(Object(r),!0).forEach((function(n){(0,t.Z)(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function g(e){var n=e.material,r=e.options,t=e.seed,a=e.selected,c=e.isCaptureGem,s=void 0!==c&&c,l=(0,o.useMemo)((function(){return t>=0?Math.floor(t):i.MathUtils.randInt(0,Number.MAX_SAFE_INTEGER)}),[t]),f=(0,o.useMemo)((function(){return new u(r||h(h({seed:l},(0,v.N)(l)),{},{material:n}),a)}),[u,l,n,r,a]);return(0,d.xQ)((function(){return f.mesh.rotation.y+=s?0:a?.05:.005})),(0,p.jsx)("primitive",{object:f.mesh})}},77976:function(e,n,r){r.d(n,{UR:function(){return m},ZP:function(){return h}});var t=r(30266),o=r(68216),a=r(92809),i=r(809),c=r.n(i),s=r(19685),l=r(2212),f=r(1217),u=r(87011),v=r(30232);function d(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?d(Object(r),!0).forEach((function(n){(0,a.Z)(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):d(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}var m={EMERALD:"emerald",HEART:"heart",MARQUISE:"marquise",OVAL:"oval",PEAR:"pear",TAPERED:"tapered",RADIANT:"radiant"};var h=function e(n,r){var i=this;(0,o.Z)(this,e),(0,a.Z)(this,"gltfLoader",void 0),(0,a.Z)(this,"objLoader",void 0),(0,a.Z)(this,"textureLoader",void 0),(0,a.Z)(this,"options",void 0),(0,a.Z)(this,"mesh",void 0),(0,a.Z)(this,"edgeMap",void 0),(0,a.Z)(this,"material",void 0),(0,a.Z)(this,"load",function(){var e=(0,t.Z)(c().mark((function e(n){var r,t,o,a,s,l;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=n.toLowerCase(),Object.values(m).includes(r)){e.next=3;break}throw new Error("Invalid cut gem type please use one of the following: "+Object.values(m).join(", "));case 3:return t="/images/textures/edgeMaps/".concat(r,"-edge.png"),e.next=6,i.textureLoader.loadAsync(t);case 6:if(i.edgeMap=e.sent,i.edgeMap.flipY=!1,o={surfaceWear:i.options.surfaceWear,deformation:i.options.deformation,edgeWear:i.options.edgeWear},!Object.values(o).every((function(e){return 0===e}))){e.next=18;break}return s="/models/obj/".concat(r,".obj"),e.next=14,i.objLoader.loadAsync(s);case 14:(a=e.sent).scale.setScalar(100),e.next=22;break;case 18:return l="/models/glb/".concat(r,".glb"),e.next=21,i.gltfLoader.loadAsync(l);case 21:a=e.sent.scene;case 22:return i.mesh=a,i.mesh.traverse((function(e){e.isMesh&&(e.material=i.material)})),e.abrupt("return",a);case 25:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()),this.gltfLoader=new f.E,this.textureLoader=new l.TextureLoader,this.objLoader=new u.L,this.options=n;var d={};for(var h in n)d[h]={value:n[h]};this.material=new v.s({baseMaterial:v.v.PHYSICAL,vShader:{header:(0,s.kq)("\n            varying float vCrack;\n\n            uniform sampler2D uEdgeMap;\n\n            uniform float edgeWear;\n            uniform float surfaceWear;\n            uniform float deformation;\n         \n            \n            vec3 hash( vec3 x ) {\n              x = vec3( dot(x,vec3(127.1,311.7, 74.7)),\n                    dot(x,vec3(269.5,183.3,246.1)),\n                  dot(x,vec3(113.5,271.9,124.6)));\n              return fract(sin(x)*43758.5453123);\n            }\n            vec3 voronoi( in vec3 x ) {\n                vec3 p = floor( x );\n                vec3 f = fract( x );\n                float id = 0.0;\n                vec2 res = vec2( 100.0 );\n                for( int k=-1; k<=1; k++ )\n                for( int j=-1; j<=1; j++ )\n                for( int i=-1; i<=1; i++ )\n                {\n                    vec3 b = vec3( float(i), float(j), float(k) );\n                    vec3 r = vec3( b ) - f + hash( p + b );\n                    float d = dot( r, r );\n                    if( d < res.x )\n                    {\n                        id = dot( p+b, vec3(1.0,57.0,113.0 ) );\n                        res = vec2( d, res.x );\n                    }\n                    else if( d < res.y )\n                    {\n                        res.y = d;\n                    }\n                }\n                return vec3( sqrt( res ), abs(id) );\n            }\n\n            vec3 displace(vec3 p) {\n                vec4 edge = texture2D(uEdgeMap, uv);\n                gln_tFBMOpts opts = gln_tFBMOpts(1.0, 0.5, 2.0, 1., 1.0, 5, false, false);\n                vec3 cells = voronoi(p);\n                vCrack = (1.0 - pow(cells.x, 1.9)) * 10.;\n                float d = gln_sfbm(p * 4., opts) * 0.5;\n\n                vCrack *= d * 10. * edge.x * edgeWear;\n                vCrack = clamp(vCrack, 0.,1.);\n\n                return p + (normal * d * 0.5 * edge.x * edgeWear) + (normal * d * 0.005 * surfaceWear) - (normal * vCrack * 0.005 * deformation);\n                \n            }\n            "),main:"\n            csm_Position = displace(position);\n            "},fShader:{header:"\n            varying float vCrack;\n            uniform vec3 color;\n            uniform int usesRandomColor;\n            \n            ",main:"\n            vec3 _c = color;\n            vec3 c1 = _c;\n            vec3 c2 = _c * 2.;\n            vec3 c = mix(c1, c2, vCrack);\n            csm_DiffuseColor = vec4(c, 1.0);\n            "},passthrough:p({flatShading:!0,transmission:1,roughness:.3*Math.max(1.5*n.surfaceWear,n.edgeWear),ior:2.33,thickness:2,metalness:.5,clearcoat:1,clearcoatRoughness:0,color:r?n.color.multiplyScalar(1.5):n.color},n.material),uniforms:p(p({},d),{},{uEdgeMap:{value:null}})},(function(){i.material.uniforms.uEdgeMap.value=i.edgeMap}))}},67117:function(e,n,r){r.d(n,{N:function(){return i},b:function(){return c}});var t=r(2212),o=r(79615),a=function(e,n,r){return(e.float()-(t=0))*(r-(o=n))/(1-t)+o;var t,o};function i(e){var n=new o.H9(e,624,397);return{edgeWear:a(n,0,1),bumpStrength:a(n,0,1),faces:a(n,1,4),edgeStrength:a(n,.5,.9),roughnessVariation:a(n,0,1),edgeBrightness:a(n,0,1),shadowStrength:a(n,0,4),roughness:a(n,0,1),color:new t.Color(a(n,0,1),a(n,0,1),a(n,0,1)),offset:new t.Vector2(a(n,0,100),a(n,0,100)),scale:new t.Vector3(a(n,1,2),a(n,1,2),a(n,1,2)),scaleMultiplier:new t.Vector3(1,2.5,1.2)}}function c(e){var n=new o.H9(e,624,397);return-10==e?{surfaceWear:0,edgeWear:0,deformation:0,color:new t.Color("#ff0000")}:-5==e?{surfaceWear:.15,edgeWear:0,deformation:.2,color:new t.Color("#00ff00")}:-2==e?{surfaceWear:.8,edgeWear:.1,deformation:.5,color:new t.Color("#0000ff")}:{surfaceWear:a(n,0,.5),edgeWear:a(n,0,.3),deformation:a(n,0,1),color:new t.Color(a(n,0,1),a(n,0,1),a(n,0,1))}}},30232:function(e,n,r){r.d(n,{v:function(){return d},s:function(){return p}});var t=r(68216),o=r(14695),a=r(91077),i=r(30268),c=r(92953),s=r(92809),l=r(2212);function f(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?f(Object(r),!0).forEach((function(n){(0,s.Z)(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function v(e){var n=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,t=(0,c.Z)(e);if(n){var o=(0,c.Z)(this).constructor;r=Reflect.construct(t,arguments,o)}else r=t.apply(this,arguments);return(0,i.Z)(this,r)}}var d={NORMAL:"MeshNormalMaterial",BASIC:"MeshBasicMaterial",PHONG:"MeshPhongMaterial",MATCAP:"MeshMatcapMaterial",TOON:"MeshToonMaterial",PHYSICAL:"MeshPhysicalMaterial",LAMBERT:"MeshLambertMaterial",DEPTH:"MeshDepthMaterial",POINTS:"PointsMaterial"},p=function(e){(0,a.Z)(r,e);var n=v(r);function r(e){var a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){};if((0,t.Z)(this,r),!e)throw new Error("Options object must be provided.");e.uniforms||(e.uniforms={}),e.passthrough||(e.passthrough={});var c=new l[e.baseMaterial](e.passthrough);for(var f in a=n.call(this),(0,s.Z)((0,o.Z)(a),"uniforms",void 0),c)void 0===a[f]&&(a[f]=0);a.setValues(c);var v=/\/\*[\s\S]*?\*\/|\/\/.*/g;return a.onBeforeCompile=function(n){var r,t,o,c,s,l;(n.vertexShader=m("vert",n.vertexShader,{defines:null===(r=e.vShader.defines)||void 0===r?void 0:r.replace(v,""),header:null===(t=e.vShader.header)||void 0===t?void 0:t.replace(v,""),main:null===(o=e.vShader.main)||void 0===o?void 0:o.replace(v,"")}),e.fShader)&&(n.fragmentShader=m("frag",n.fragmentShader,{defines:null===(c=e.fShader.defines)||void 0===c?void 0:c.replace(v,""),header:null===(s=e.fShader.header)||void 0===s?void 0:s.replace(v,""),main:null===(l=e.fShader.main)||void 0===l?void 0:l.replace(v,"")}));n.uniforms=u(u({},n.uniforms),e.uniforms),a.uniforms=n.uniforms,a.needsUpdate=!0,i()},a}return r}(l.Material);function m(e,n,r){var t=r.defines,o=void 0===t?"":t,a=r.header,i=void 0===a?"":a,c=r.main,s=void 0===c?"":c,l=n,f=s.includes("csm_Position")?"csm_Position":"position",u=s.includes("csm_Normal")?"csm_Normal":"normal",v=s.includes("csm_DiffuseColor")?"diffuseColor = csm_DiffuseColor":"";s.includes("newPos")&&(f="newPos"),s.includes("newNormal")&&(u="newNormal"),s.includes("newColor")&&(v="diffuseColor = newColor");var d="";s.includes("csm_Roughness")&&(d="roughnessFactor = csm_Roughness;");var p="vert"===e?{"#include <defaultnormal_vertex>":"\n          vec3 transformedNormal = ".concat(u,";\n          "),"#include <project_vertex>":"\n          transformed = ".concat(f,";\n          #include <project_vertex>\n        ")}:{"#include <color_fragment>":"\n          #include <color_fragment>\n          ".concat(v,";\n    "),"#include <roughnessmap_fragment>":"\n          #include <roughnessmap_fragment>\n          ".concat(d,";\n    ")};return Object.keys(p).forEach((function(e){var n,r;n=e,r=p[e],l=l.split(n).join(r)})),l=l.replace("void main() {","\n      ".concat(i,"\n      void main() {\n        vec3 csm_Position;\n        vec3 csm_Normal;\n        vec4 csm_DiffuseColor;\n        float csm_Roughness;\n        float csm_PointSize;\n        ").concat(s,"\n      ")),s.includes("csm_PointSize")&&(l=l.replace("gl_PointSize = size;","gl_PointSize = csm_PointSize;")),"\n      ".concat(o,"\n      ").concat(l,"\n    ")}}}]);